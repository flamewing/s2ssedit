language: cpp

dist: xenial
sudo: required
compiler: gcc

cache:
    directories:
        - ${TRAVIS_BUILLD_DIR}/deps

addons:
  apt:
    sources: &common_sources
      - ubuntu-toolchain-r-test
    packages: &common_depends
      - libboost-all-dev
      - libgtkmm-2.4-dev
      - libglibmm-2.4-dev
      - libcairomm-1.0-dev
      - libsigc++-2.0-dev

before_script: &mdcomp
  - pushd `mktemp -d` && git clone --depth 1 https://github.com/flamewing/mdcomp.git && cd mdcomp && ./autogen.sh && make && sudo make install && popd

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "pnsbgmxN9IHWZjwW4jxv2AzhKfBjIi8t+jrEgCz+RQF9XwC8hKj/KoCmP7daLz4ZKMAgwhkY+SN4nbdXjk2XV3J1E+pJCW9wOUKkr0iKCWHrXUOg2c4b9PxXgOCptgrBDiLYc+7jXP2l+EgtVldb3jJ+f4uYGHNX9+2sphVMJstFZaqjLtEK+QzVuJGvuuTs+Jkodfu2ihhw2RisKAQftFYOuuLObWNvyGtogyUJq4CBqAUOcAGx4rBf4+zgqcj5ei5T1jQYZyscueIDgzSyby4cK9Oe6NVqZsNQr20KpiYVgQP/yR7wifx41dcXJ8CPjEsd3NzWw4V7iosRO24f4H8K3XEF7zuCifmRTlGNU1eHDQVBehWV1YW5XBx7SdEDQ+260qsHg7d82iqVokWrQTRDWxyUjCwOYxpx2kmHrf6CjRnK6dPMEOLRtNeOqGGYr0+iBMNlpdAhZb6z0fEEkIjjaXcDYcoymraxaPTZvt1Xp/RDtk0zaChdw5MODLS/TzmfjcwuazqOTn1iyL5iWDgpb5NDbinIPSBv6VTrhp44pVGB4+timzOHjNVeJ28wqQCtjtzjMVxt64dPXHLDYRVIf0mJww/QEb+qoLizhEg0RdK8IGYIiqteLjTEJ4357ZxnAAlqBNyulkDrd8xDUdt42IPb8JvTYeiMGKLeiMw="
    - MAKEFLAGS="-j 2"

matrix:
    include:
        ##########################################################################
        # Coverity with GCC on Linux
        ##########################################################################
        - os: linux
          compiler: gcc
          env: MATRIX_EVAL="export CXX=g++ && export CC=gcc" DO_COVERITY=1
          addons:
            apt:
              sources: *common_sources
              packages:
                - *common_depends
                - g++-7
            coverity_scan:
              project:
                name: "flamewing/s2ssedit"
                description: "Sonic 2 Special Stage Editor"
              notification_email: flamewing.sonic@gmail.com
              build_command_prepend: "./autogen.sh"
              build_command:   "make"
              branch_pattern: coverity_scan
          before_script:
            - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 1000
            - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 1000
            - *mdcomp

        ##########################################################################
        # clang on Linux
        ##########################################################################
        - os: linux
          compiler: clang
          env: MATRIX_EVAL="export CXX=clang++ && export CC=clang" DO_COVERITY=0
          addons:
            apt:
              sources: llvm-toolchain-xenial-7
              packages:
                - *common_depends
                - clang-7
          before_script:
            - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-7 1000
            - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-7 1000
            - *mdcomp

        ##########################################################################
        # GCC on Linux
        ##########################################################################
        - os: linux
          compiler: gcc
          env: MATRIX_EVAL="export CXX=g++ && export CC=gcc" DO_COVERITY=0
          addons:
            apt:
              sources: *common_sources
              packages:
                - *common_depends
                - g++-7
          before_script:
            - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 1000
            - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 1000
            - *mdcomp

        - os: linux
          compiler: gcc
          env: MATRIX_EVAL="export CXX=g++ && export CC=gcc" DO_COVERITY=0
          addons:
            apt:
              sources: *common_sources
              packages:
                - *common_depends
                - g++-8
          before_script:
            - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 1000
            - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 1000
            - *mdcomp

before_install:
  # Exit immediately if the branch is the "coverity_scan" branch and DO_COVERITY is "0"
  - if [ "$TRAVIS_BRANCH" == "coverity_scan" -a "${DO_COVERITY}" == "0" ] ; then exit 0; fi
  # Exit immediately if the branch is not the "coverity_scan" branch and DO_COVERITY is "1"
  - if [ "$TRAVIS_BRANCH" != "coverity_scan" -a "${DO_COVERITY}" == "1" ] ; then exit 0; fi
  # Work around bug in glibmm that is revealed in gcc8
  - sudo sed -ri 's/GPrivate\* gobj\(\) \{ return gobject_; \}/GPrivate* gobj\(\) \{ return \&gobject_; \}/' /usr/include/glibmm-2.4/glibmm/threads.h || true
  - eval "${MATRIX_EVAL}"
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get -qq update; fi
  - if [ "${DO_COVERITY}" == "1" ]; then echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca- ; fi

script: if [ "$TRAVIS_BRANCH" != "coverity_scan" ]; then .travis/script.sh; elif [ -e cov-int/scm_log.txt ] ; then cat cov-int/scm_log.txt; fi

notifications:
  email: true
  on_success: change
  on_failure: always

